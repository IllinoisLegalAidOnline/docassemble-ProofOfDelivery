metadata:
  title: Proof of delivery
  short title: Proof of delivery
  comment: This program helps you prove that you sent a copy of a court document to the other parties in a court case.
  authors:
    - Matt Newsted
    - Vivian McNaughton
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml  
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - users[i].lawyer: ALIndividual
  - other_parties: ALPeopleList.using(there_are_any=True)
  - other_parties[i].lawyer: ALIndividual
  - delivery_parties: ALPeopleList.using(there_are_any=True)
  - delivery_parties[i].lawyer: ALIndividual
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')
---
code: |
  al_form_type = 'existing_case'
  ilao_easy_form_title = "Proof of delivery"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/proof-delivery"
  form_name = "Proof of delivery"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-ProofOfDelivery'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_case_info: Case info
  - section_parties: Parties and delivery
  - section_about_you: About you
  - section_download: Download  
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  snapshot_start
  how_to_use
  set_progress(5)
  whats_next
  accept_terms
  
  set_progress(15)
  nav.set_section('section_case_info')
  document_name
  user_ask_role
  users.gather()
  set_progress(30)
  other_parties.gather()
  set_progress(40)
  trial_court
  case_number

  set_progress(50)
  nav.set_section('section_parties')
  if delivery_parties.number() > 8:
    extra_delivery_forms
  set_progress(75)
  for person in delivery_parties[:8]:
    if person.is_represented:
      person.lawyer.name.first
    person.address.address
    if person.knows_delivery_method:
      person.mail_delivery
      person.delivery_date
  
  for person in delivery_parties[:8]:
    if person.knows_delivery_method == False or person.hand_delivery == True:
      hand_delivery_info
  

  set_progress(75)
  nav.set_section('section_about_you')
  users[0].address.address
  users[0].phone_number
  if users[0].email_notice == True:
    users[0].email
  e_signature

  set_progress(100)
  nav.set_section('section_download')
  forms_assembling
  snapshot_forms
  get_docs_screen

---
code: |
  stuff_to_snapshot = {
  	'start_time': str(current_datetime().format_datetime()),
  	'started_interview': True, 
  	}
    
  try:
    stuff_to_snapshot['ip_address'] = device(ip=True)
  except:
    pass 
   
  stuff_to_snapshot['user_zip'] = showifdef('users[0].address.zip')

  stuff_to_snapshot['downloaded_forms'] = showifdef('forms_assembling')
  
  stuff_to_snapshot['user_role'] = showifdef('user_ask_role')
   
  
  store_variables_snapshot(
  	data=stuff_to_snapshot, persistent=True
  	)
  snapshot_interview_state = True
---
code: |
  snapshot_interview_state
  snapshot_start = True  
---
code: |
  reconsider('snapshot_interview_state')
  snapshot_forms = True
---
id: welcome
question: |
  Proof of delivery
subquestion: |
  Welcome to Illinois Legal Aid Online's **Proof of delivery** Easy Form.

  This program will help you prepare forms to prove that you sent a copy of a court document to the other parties in a court case.
  
  You must send a copy of the document to the other parties in the court case anytime:

  * You file a document with the court, or
  * The judge sends or gives a court order only to you.
field: sees_nav_bar
---
id: instructions
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  To use this program you will need: 

  * Names and addresses of the other parties, 
  * Names and addresses of the other parties’ lawyers, and 
  * The court case number. 

  You can find this information on other court papers you have about this case. 

  Set aside 5 to 10 minutes to finish this program. You can log in and save your work to return to later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some questions have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that also gives help.
---
template: help_example
subject: |
  **You can expand sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  After you download your Proof of delivery, you must file it with the court. This program does not file your Proof of delivery for you.
  
  Read the instructions you can download at the end of this program. 
---
id: document name
question: |
  What is the name of the court document you are sending to the other parties in the case?
subquestion: |
  The name is usually found in the top part of the first page of the court document. Examples include **Court Order**, **Answer to Discovery**, or **Motion to Dismiss**.
fields:
  - Court document name: document_name
---
id: any other users
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  Is anyone else on your side of this case?
  % else:
  Is anyone else adding their name to this form with you?
  % endif
subquestion: |
  % if len(users.elements) > 1:  
  So far you have told us about ${comma_and_list(users.complete_elements().full_names())}.
  % endif  
fields:
  - "Anyone else?": users.there_is_another
    datatype: yesnoradio
---
template: other_parties_help
subject: |
  **How do I know if there are others?**
content: |  
    % if user_ask_role == 'plaintiff':
    You said you are the **Plaintiff** or the **Petitioner.** The other people on your side of the case would be co-plaintiffs or co-petitioners.
    % else:
    You said you are the **Defendant** or the **Respondent.** The other people on your side of the case would be co-defendants or co-respondents.
    % endif
---
depends on:
  - user_started_case
sets:
  - users[i].name.first
id: other users names
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  What is the name of the ${ ordinal(i) } person who is part of the case with you?
  % else:
  What is the name of the ${ ordinal(i) } person who is adding their name to
  this form with you?
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      users[i].name_fields(person_or_business='unsure')
---
template: long_name_help
subject: |
  **What if the person's name doesn't fit into 4 fields?**
content: |
  If the party has a long name like "Jane Smith, Director of Housing," select **Business or organization**. You can then enter the full name and title.
---
# modified other opposing parties question
# add to basic questions
id: any other opposing parties
question: |
  % if users==plaintiffs:
  Is there another **defendant** or **respondent** in this case?
  % else:
  Is there another **plaintiff** or **petitioner** in this case?
  % endif
subquestion: |
  % if len(other_parties.elements) >= 1:  
  So far you have told us about ${comma_and_list(other_parties.complete_elements().full_names())}.
  % endif
fields:
  - "Anyone else?": other_parties.there_is_another
    datatype: yesnoradio
---
depends on:
  - user_started_case
sets:
  - other_parties[i].name.first
id: names of opposing parties
question: |
  % if users==plaintiffs:
  Name of ${ ordinal(i) } **defendant** or **respondent** in this case
  % else:
  Name of ${ ordinal(i) } **plaintiff** or **petitioner** in this case
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
id: trial court county
continue button field: case_county
question: |
  In which county was this case filed?
fields:
  - no label: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
#fields:
#  - no label: trial_court_index
#    code: |
#      court_list._load_courts()['address_county'].items()
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])

# old code
#  def court_county_lookup():
#    all_court_counties = court_list._load_courts()['address_county'].items()
#    filtered_courts = [(-1, "Cook")]
#    for court in all_court_counties:
#      if court[1] != "Cook":
#        filtered_courts.append(court)
#    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
id: case number
question: |
  What is the case number?
subquestion: |
  ${ collapse_template(case_number_help) }  
fields:
  - Case number: case_number
---
template: case_number_help
subject: |
  **Where can I find this?**
content: |  
  The case number should be on your court papers. Look at the Complaint or Petition, or the Summons if you received one. It is usually in the top-right part of the first page.
  
  If you started the case, the court clerk should have given you the case number.
  
  In this example, the case number is **2022 EXAMPLE 123**.
  
  [FILE case_number_example.png, 100%, Summons form showing case number]
---
id: phone number
question: |
  What is your phone number?
subquestion: |
  If you do not want to list your phone number on your form, leave this blank.
fields:
  - Phone: users[0].phone_number
    datatype: al_international_phone
    required: False
---
id: notice by email
question: |
  Do you have an email address?
subquestion: |
  If you have an email address, you must list it so the court and other parties can contact you about this case.
fields:
  - "Email?": users[0].email_notice
    datatype: yesnoradio
---
id: email address
question: |
  What email address do you want to list on your court forms?
subquestion: |
  If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  Be sure to check this email daily, otherwise you may miss important information about your case.
fields:
  - Email address: users[0].email    
    datatype: email
    #required: False
---
#id: e-signature
#question: |
#  Do you want to add your e-signature to your Proof of delivery?
#subquestion: |
#  If you do not add your **{e-signature}**, you must sign your paper form before you file and deliver it.
#  
#  This program can put “/s/ ${users[0].name.full(middle='full')}” where you would sign your name. The court will accept this as your signature.
#  
#  ${ collapse_template(signature_help) }  
#fields:
#  - "Add e-signature?": e_signature
#    datatype: yesnoradio
#terms:
#  - "e-signature": |
#      An e-signature is an electronic signature. It is a digital version of a signature that has the same effect as a hand-written signature. 
---
template: signature_help
subject: |
  **What does it mean to sign the Proof of delivery?**
content: |  
  By signing your Proof of delivery, you are certifying that:
  
  * Everything on the form is true and correct, and
  * You understand that making a false statement on the form is perjury, which can result in criminal penalties.
  
  See the [**Code of Civil Procedure, 735 ILCS 5/1-109**](https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm), for more information.
---
reconsider: True
code: |
  delivery_parties = DAList("delivery_parties", elements = other_parties + users[1:])
# changed order to keep it a DAList
---
id: extra delivery forms required
continue button field: extra_delivery_forms
question: |
  Additional Proof of Delivery
subquestion: |
  This program makes the Proof of Delivery forms for up to 8 other parties.
  
  You will need to fill out *Additional Proof of Delivery* forms for ${comma_and_list(delivery_parties[8:])}. 
  
  You can download blank *Additional Proof of Delivery* forms at the end of this program.
---
id: has lawyer
generic object: ALIndividual
question: |
  Does ${ x.name.full(middle="full") } have a lawyer in this case?
field: x.is_represented
choices:
  - Yes: True
  - No: False
  - I don't know: null 
# note: null will be None in review screen
---
id: add lawyer
generic object: ALIndividual
question: |
  Who is  ${ x.name.full(middle="full") }'s lawyer?
fields:
  - First name: x.lawyer.name.first
  - Middle name: x.lawyer.name.middle
    required: False
  - Last name: x.lawyer.name.last
  - Suffix: x.lawyer.name.suffix
    code: |
      name_suffix()
    required: False  
---
id: delivery party address
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
generic object: ALIndividual
question: |
  % if x.is_represented:
  What is ${ x.lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ x.name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: x.address.address
    address autocomplete: True
  - Address line 2: x.address.unit
    required: False
  - City: x.address.city
  - State: x.address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: x.address.zip
---
#added to remove same as / someplace else default in ql_baseline.yml
id: users delivery party address
sets:
  - users[i].address.address
  - users[i].address.city
  - users[i].address.zip
generic object: ALIndividual
question: |
  % if users[i].is_represented:
  What is ${ users[i].lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ users[i].name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: users[i].address.address
    address autocomplete: True
  - Address line 2: users[i].address.unit
    required: False
  - City: users[i].address.city
  - State: users[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[i].address.zip

---
id: knows delivery method
generic object: ALIndividual
question: |
  % if x.is_represented:
  Do you know **how** and **when** you will send your ${ document_name } to ${ x.lawyer.name.full(middle="full") }?
  % else:
  Do you know **how** and **when** you will send your ${ document_name } to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  ${ collapse_template(delivery_method_help) }  

  For best results, complete the Proof of Delivery section and send the forms today.

  If you do not know this now, you can add it to the Proof of Delivery section of your forms later.
field: x.knows_delivery_method
choices:
  - Yes: True
  - No. I do not know this now. I will add it to my forms later.: False
---
template: delivery_method_help
subject: |
  **Learn more about your delivery options**
content: |  
  You can deliver the forms by:
  
  * The court's **{e-filing system}**,
  * Email,
  * US mail or a delivery company (like UPS or FedEx), or
  * Hand delivery.

  You may use US mail or a delivery company, or hand delivery only if you or the other party **does not** have an email address. Otherwise, you must use the email or the court's **{e-filing system}**. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).
terms:
  - e-filing system: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP).
---
id: user party delivery method
#changed from generic object to users to allow for changing answers via Back
#generic object: ALIndividual
question: |
  % if users[i].is_represented:
  How will you send your ${ document_name } to ${ users[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your ${ document_name } to ${ users[i].name.full(middle="full") }?
  % endif
subquestion: |  
  You may use US mail or a delivery company, or hand delivery if you or the other party **does not** have an email address.

  For best results, complete the Proof of Delivery section and send the forms today.

  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.

  ${ collapse_template(efiling_help) }
fields:
  - E-filing system: users[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP). Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).
  - Email: users[i].email_delivery
    datatype: yesnowide
  - Email address: users[i].delivery_email
    datatype: email
    show if: 
      variable: users[i].email_delivery
      is: True
    required: False
  - US mail or delivery company (like UPS or FedEx): users[i].mail_delivery
    datatype: yesnowide
  - Hand delivery: users[i].hand_delivery
    datatype: yesnowide
---
template: efiling_help
subject: |
  **What if I need help?**
content: |  
  If you need help delivering by email or using the e-filing service provider, you can visit a [**Legal Self-Help Center**](https://www.illinoislegalaid.org/get-legal-help/lshc-directory) or you can call or text [**Illinois Court Help**](https://www.ilcourthelp.gov) at 833-411-1121.
---
id: other party delivery method
# generic object: ALIndividual
#changed from generic object to other_parties to allow for changing answers via Back
question: |
  % if other_parties[i].is_represented:
  How will you send your ${ document_name } to ${ other_parties[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your ${ document_name } to ${ other_parties[i].name.full(middle="full") }?
  % endif
subquestion: |  
  You may use US mail or a delivery company, or hand delivery if you or the other party **does not** have an email address.

  For best results, complete the Proof of Delivery section and send the forms today.

  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.

  ${ collapse_template(efiling_help) }
fields:
  - E-filing system: other_parties[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be an electronic filing manager (EFM) or an approved electronic filing service provider (EFSP). Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).
  - Email: other_parties[i].email_delivery
    datatype: yesnowide
  - Email address: other_parties[i].delivery_email
    datatype: email
    show if: 
      variable: other_parties[i].email_delivery
      is: True
    required: False
  - US mail or delivery company (like UPS or FedEx): other_parties[i].mail_delivery
    datatype: yesnowide
  - Hand delivery: other_parties[i].hand_delivery
    datatype: yesnowide
---
id: delivery time
generic object: ALIndividual
question: |
  % if x.is_represented:
  When will you send your ${ document_name } to ${ x.lawyer.name.full(middle="full") }?
  % else:
  When will you send your ${ document_name } to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  For best results, complete the Proof of Delivery section and send the forms today.

  **Note:** If you do not know this now, be sure to add it to your forms later.
fields:
  - Date: x.delivery_date
    datatype: date
    required: False
    min: ${ today().format("yyyy-MM-dd") }
    max: ${ today().plus(years=1) }
  - Time: x.delivery_time
    datatype: time
    required: False
validation code: |
  if (not showifdef('x.delivery_date')):
    x.knows_delivery_date = False
  else:
    x.knows_delivery_date = True
  if (not showifdef('x.delivery_time')):
    x.knows_delivery_time = False
  else:
    x.knows_delivery_time = True

---
id: hand delivery info
continue button field: hand_delivery_info
question: |
  Complete the delivery section of your forms
subquestion: |
  **Don't forget!** Make sure you review and complete the delivery section of your forms for each party.

  [FILE proof_of_delivery_snip.png, 100%, Proof of Delivery section of forms]
  
  **Instructions when delivering your forms by hand:**

  * If a party in your case does not have a lawyer, you can hand-deliver the forms to them or to a family member who is 13 or older at their home.
  * If they do have a lawyer, you can hand-deliver the forms to the lawyer or to the lawyer's office.
---
id: forms assembling
continue button field: forms_assembling
question: |
  Almost done
subquestion: |
  After you click **Next**, it may take a few moments to finish making your forms.
  
  ###### You do not need to refresh your screen. Hang in there!
  
  [NEWLINE]
---
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.

  This program does not file your Proof of delivery with the court or deliver it to other parties in your case. You will need to do this yourself. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program does not file your Proof of delivery with the court or deliver it to other parties in your case. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/efileil/).
  
  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Proof of delivery forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---
objects:
  - proof_of_delivery: ALDocument.using(title="Proof of Delivery", filename="proof_of_delivery.pdf", has_addendum=False)
  - instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - additional_proof: ALDocument.using(title="Additional Proof of Delivery", filename="additional_proof_of_delivery.pdf", has_addendum=False)
  - additional_proof_2: ALDocument.using(title="Additional Proof of Delivery 2", filename="additional_proof_2.pdf", has_addendum=False)
  - additional_proof_3: ALDocument.using(title="Additional Proof of Delivery 3", filename="additional_proof_3.pdf", has_addendum=False)
  - additional_proof_blank: ALDocument.using(title="Additional Proof of Delivery (blank)", filename="additional_proof_blank.pdf", has_addendum=False)
---
code: |
  proof_of_delivery.enabled = True
  instructions.enabled = True
  additional_proof.enabled = False
  additional_proof_2.enabled = False
  additional_proof_3.enabled = False
  additional_proof_blank.enabled = False
  
  if delivery_parties.number_gathered() > 2:
    additional_proof.enabled = True
    
  if delivery_parties.number_gathered() > 4:
    additional_proof_2.enabled = True
    
  if delivery_parties.number_gathered() > 6:
    additional_proof_3.enabled = True
    
  if delivery_parties.number_gathered() > 8:
    additional_proof_blank.enabled = True
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[instructions, proof_of_delivery_single_pdf_bundle, additional_proof_blank], filename="proof_of_delivery.pdf", title="All forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[instructions, proof_of_delivery_single_pdf_bundle, additional_proof_blank], filename="proof_of_delivery.pdf", title="All forms")
---
objects:
  - proof_of_delivery_single_pdf_bundle: ALDocumentBundle.using(elements=[proof_of_delivery, additional_proof, additional_proof_2, additional_proof_3], filename="proof_of_delivery_bundle.pdf", title="Proof of Delivery", enabled=True)
---
attachment:
  variable name: instructions[i]
  name: instructions
  filename: instructions
  skip undefined: True
  editable: False
  pdf template file: POD_Instructions.pdf
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: proof_of_delivery[i]
  name: proof_of_delivery
  filename: proof_of_delivery
  skip undefined: True
  editable: False
  pdf template file: CC_Proof_of_Delivery.pdf
  fields:
      - "court_county": ${ trial_court.address.county.upper() }
      - "plaintiff_list": ${ users.full_names() if user_ask_role == 'plaintiff' else other_parties.full_names() }
      - "defendant_list": ${ other_parties.full_names() if user_ask_role == 'plaintiff' else users.full_names() }
      - "user_name": ${ users[0].name.full(middle="full") }
      - "user_street": ${ users[0].address.line_one(bare=True) }
      - "user_csz": ${ users[0].address.line_two() }
      - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "case_number": ${ case_number }
      - "e_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "document_name": ${document_name}
      - "party_one_name": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "party_one_address": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "party_one_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "hand_one": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "mail_one": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "efiling_one": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "email_one": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "date_one": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "time_one": ${ format_time(delivery_parties[0].delivery_time, format='h:mm') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      - "morning_one": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='AM' else '' }
      - "afternoon_one": ${ True if delivery_parties[0].knows_delivery_method and format_time(delivery_parties[0].delivery_time, format='a')=='PM' else '' }

      - "party_two_name": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "party_two_address": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "party_two_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "hand_two": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "mail_two": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "efiling_two": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "email_two": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "date_two": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "time_two": ${ format_time(delivery_parties[1].delivery_time, format='h:mm') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      - "morning_two": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='AM' else '' }
      - "afternoon_two": ${ True if delivery_parties[1].knows_delivery_method and format_time(delivery_parties[1].delivery_time, format='a')=='PM' else '' }

      - "another_form": ${ delivery_parties.number() > 2 }
---
attachment:
  variable name: additional_proof[i]
  name: additional_proof
  filename: additional_proof
  skip undefined: True
  editable: False
  pdf template file: CC_Additional_Proof_of_Delivery.pdf
  fields:
      - "court_county": ${ trial_court.address.county.upper() }
      - "plaintiff_list": ${ users.full_names() if user_ask_role == 'plaintiff' else other_parties.full_names() }
      - "defendant_list": ${ other_parties.full_names() if user_ask_role == 'plaintiff' else users.full_names() }
      - "user_name": ${ users[0].name.full(middle="full") }
      - "user_street": ${ users[0].address.line_one(bare=True) }
      - "user_csz": ${ users[0].address.line_two() }
      - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "case_number": ${ case_number }
      - "e_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "document_name": ${document_name}
      - "upper_party_name": | 
          % if delivery_parties[2].is_represented:
          ${ delivery_parties[2].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[2].name.full(middle="full") })
          % else:
          ${ delivery_parties[2].name.full(middle="full") }
          % endif
      - "upper_party_address": ${ delivery_parties[2].address.on_one_line(bare=True) }
      - "upper_party_email": ${ delivery_parties[2].delivery_email if delivery_parties[2].knows_delivery_method else '' }
      - "hand_upper": ${ delivery_parties[2].hand_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "mail_upper": ${ delivery_parties[2].mail_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "efiling_upper": ${ delivery_parties[2].efm_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "email_upper": ${ delivery_parties[2].email_delivery if delivery_parties[2].knows_delivery_method else '' }
      - "date_upper": ${ delivery_parties[2].delivery_date if delivery_parties[2].knows_delivery_method and delivery_parties[2].knows_delivery_date else '' }
      - "time_upper": ${ format_time(delivery_parties[2].delivery_time, format='h:mm') if delivery_parties[2].knows_delivery_method and delivery_parties[2].knows_delivery_time else '' }
      - "morning_upper": ${ True if delivery_parties[2].knows_delivery_method and format_time(delivery_parties[2].delivery_time, format='a')=='AM' else '' }
      - "afternoon_upper": ${ True if delivery_parties[2].knows_delivery_method and format_time(delivery_parties[2].delivery_time, format='a')=='PM' else '' }

      - "lower_party_name": | 
          % if delivery_parties[3].is_represented:
          ${ delivery_parties[3].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[3].name.full(middle="full") })
          % else:
          ${ delivery_parties[3].name.full(middle="full") }
          % endif
      - "lower_party_address": ${ delivery_parties[3].address.on_one_line(bare=True) }
      - "lower_party_email": ${ delivery_parties[3].delivery_email if delivery_parties[3].knows_delivery_method else '' }
      - "hand_lower": ${ delivery_parties[3].hand_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "mail_lower": ${ delivery_parties[3].mail_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "efiling_lower": ${ delivery_parties[3].efm_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "email_lower": ${ delivery_parties[3].email_delivery if delivery_parties[3].knows_delivery_method else '' }
      - "date_lower": ${ delivery_parties[3].delivery_date if delivery_parties[3].knows_delivery_method and delivery_parties[3].knows_delivery_date else '' }
      - "time_lower": ${ format_time(delivery_parties[3].delivery_time, format='h:mm') if delivery_parties[3].knows_delivery_method and delivery_parties[3].knows_delivery_time else '' }
      - "morning_lower": ${ True if delivery_parties[3].knows_delivery_method and format_time(delivery_parties[3].delivery_time, format='a')=='AM' else '' }
      - "afternoon_lower": ${ True if delivery_parties[3].knows_delivery_method and format_time(delivery_parties[3].delivery_time, format='a')=='PM' else '' }
---
attachment:
  variable name: additional_proof_2[i]
  name: additional_proof_2
  filename: additional_proof_2
  skip undefined: True
  editable: False
  pdf template file: CC_Additional_Proof_of_Delivery.pdf
  fields:
      - "court_county": ${ trial_court.address.county.upper() }
      - "plaintiff_list": ${ users.full_names() if user_ask_role == 'plaintiff' else other_parties.full_names() }
      - "defendant_list": ${ other_parties.full_names() if user_ask_role == 'plaintiff' else users.full_names() }
      - "user_name": ${ users[0].name.full(middle="full") }
      - "user_street": ${ users[0].address.line_one(bare=True) }
      - "user_csz": ${ users[0].address.line_two() }
      - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "case_number": ${ case_number }
      - "e_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "document_name": ${document_name}
      - "upper_party_name": | 
          % if delivery_parties[4].is_represented:
          ${ delivery_parties[4].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[4].name.full(middle="full") })
          % else:
          ${ delivery_parties[4].name.full(middle="full") }
          % endif
      - "upper_party_address": ${ delivery_parties[4].address.on_one_line(bare=True) }
      - "upper_party_email": ${ delivery_parties[4].delivery_email if delivery_parties[4].knows_delivery_method else '' }
      - "hand_upper": ${ delivery_parties[4].hand_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "mail_upper": ${ delivery_parties[4].mail_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "efiling_upper": ${ delivery_parties[4].efm_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "email_upper": ${ delivery_parties[4].email_delivery if delivery_parties[4].knows_delivery_method else '' }
      - "date_upper": ${ delivery_parties[4].delivery_date if delivery_parties[4].knows_delivery_method and delivery_parties[4].knows_delivery_date else '' }
      - "time_upper": ${ format_time(delivery_parties[4].delivery_time, format='h:mm') if delivery_parties[4].knows_delivery_method and delivery_parties[4].knows_delivery_time else '' }
      - "morning_upper": ${ True if delivery_parties[4].knows_delivery_method and format_time(delivery_parties[4].delivery_time, format='a')=='AM' else '' }
      - "afternoon_upper": ${ True if delivery_parties[4].knows_delivery_method and format_time(delivery_parties[4].delivery_time, format='a')=='PM' else '' }

      - "lower_party_name": | 
          % if delivery_parties[5].is_represented:
          ${ delivery_parties[5].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[5].name.full(middle="full") })
          % else:
          ${ delivery_parties[5].name.full(middle="full") }
          % endif
      - "lower_party_address": ${ delivery_parties[5].address.on_one_line(bare=True) }
      - "lower_party_email": ${ delivery_parties[5].delivery_email if delivery_parties[5].knows_delivery_method else '' }
      - "hand_lower": ${ delivery_parties[5].hand_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "mail_lower": ${ delivery_parties[5].mail_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "efiling_lower": ${ delivery_parties[5].efm_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "email_lower": ${ delivery_parties[5].email_delivery if delivery_parties[5].knows_delivery_method else '' }
      - "date_lower": ${ delivery_parties[5].delivery_date if delivery_parties[5].knows_delivery_method and delivery_parties[5].knows_delivery_date else '' }
      - "time_lower": ${ format_time(delivery_parties[5].delivery_time, format='h:mm') if delivery_parties[5].knows_delivery_method and delivery_parties[5].knows_delivery_time else '' }
      - "morning_lower": ${ True if delivery_parties[5].knows_delivery_method and format_time(delivery_parties[5].delivery_time, format='a')=='AM' else '' }
      - "afternoon_lower": ${ True if delivery_parties[5].knows_delivery_method and format_time(delivery_parties[5].delivery_time, format='a')=='PM' else '' }
---
attachment:
  variable name: additional_proof_3[i]
  name: additional_proof_3
  filename: additional_proof_3
  skip undefined: True
  editable: False
  pdf template file: CC_Additional_Proof_of_Delivery.pdf
  fields:
      - "court_county": ${ trial_court.address.county.upper() }
      - "plaintiff_list": ${ users.full_names() if user_ask_role == 'plaintiff' else other_parties.full_names() }
      - "defendant_list": ${ other_parties.full_names() if user_ask_role == 'plaintiff' else users.full_names() }
      - "user_name": ${ users[0].name.full(middle="full") }
      - "user_street": ${ users[0].address.line_one(bare=True) }
      - "user_csz": ${ users[0].address.line_two() }
      - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].email_notice else '' }
      - "case_number": ${ case_number }
      - "e_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "document_name": ${document_name}
      - "upper_party_name": | 
          % if delivery_parties[6].is_represented:
          ${ delivery_parties[6].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[6].name.full(middle="full") })
          % else:
          ${ delivery_parties[6].name.full(middle="full") }
          % endif
      - "upper_party_address": ${ delivery_parties[6].address.on_one_line(bare=True) }
      - "upper_party_email": ${ delivery_parties[6].delivery_email if delivery_parties[6].knows_delivery_method else '' }
      - "hand_upper": ${ delivery_parties[6].hand_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "mail_upper": ${ delivery_parties[6].mail_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "efiling_upper": ${ delivery_parties[6].efm_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "email_upper": ${ delivery_parties[6].email_delivery if delivery_parties[6].knows_delivery_method else '' }
      - "date_upper": ${ delivery_parties[6].delivery_date if delivery_parties[6].knows_delivery_method and delivery_parties[6].knows_delivery_date else '' }
      - "time_upper": ${ format_time(delivery_parties[6].delivery_time, format='h:mm') if delivery_parties[6].knows_delivery_method and delivery_parties[6].knows_delivery_time else '' }
      - "morning_upper": ${ True if delivery_parties[6].knows_delivery_method and format_time(delivery_parties[6].delivery_time, format='a')=='AM' else '' }
      - "afternoon_upper": ${ True if delivery_parties[6].knows_delivery_method and format_time(delivery_parties[6].delivery_time, format='a')=='PM' else '' }

      - "lower_party_name": | 
          % if delivery_parties[7].is_represented:
          ${ delivery_parties[7].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[7].name.full(middle="full") })
          % else:
          ${ delivery_parties[7].name.full(middle="full") }
          % endif
      - "lower_party_address": ${ delivery_parties[7].address.on_one_line(bare=True) }
      - "lower_party_email": ${ delivery_parties[7].delivery_email if delivery_parties[7].knows_delivery_method else '' }
      - "hand_lower": ${ delivery_parties[7].hand_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "mail_lower": ${ delivery_parties[7].mail_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "efiling_lower": ${ delivery_parties[7].efm_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "email_lower": ${ delivery_parties[7].email_delivery if delivery_parties[7].knows_delivery_method else '' }
      - "date_lower": ${ delivery_parties[7].delivery_date if delivery_parties[7].knows_delivery_method and delivery_parties[7].knows_delivery_date else '' }
      - "time_lower": ${ format_time(delivery_parties[7].delivery_time, format='h:mm') if delivery_parties[7].knows_delivery_method and delivery_parties[7].knows_delivery_time else '' }
      - "morning_lower": ${ True if delivery_parties[7].knows_delivery_method and format_time(delivery_parties[7].delivery_time, format='a')=='AM' else '' }
      - "afternoon_lower": ${ True if delivery_parties[7].knows_delivery_method and format_time(delivery_parties[7].delivery_time, format='a')=='PM' else '' }
---
attachment:
  variable name: additional_proof_blank[i]
  name: additional_proof_blank
  filename: additional_proof_blank
  skip undefined: True
  editable: True
  pdf template file: CC_Additional_Proof_of_Delivery_blank.pdf
  fields:
      - "fake": ${""}
---
############### Review page
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: user_ask_role
    button: |
      % if user_ask_role == "plaintiff":
        **Your role:** plaintiff or petitioner
      % else:
        **Your role:** defendant or respondent
      % endif
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where this case is filed:**
      ${ trial_court.address.county }
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }  
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }
---
#needs: yes_no_unknown
id: delivery party review screen
continue button field: x.review_delivery
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
subquestion: |  
  % if x == users[0]:
  Edit your address, phone number, and email address in the [**About you**](${ url_action('section_about_you') }) section.
  % else:
  If you don't see lawyer, address, or delivery information, then it might not be entered yet. Continue the program to answer all the questions.
  % endif
review: 
  - Edit: x.name.first
    button: |
      **Party name:**
      ${ x.name.full(middle="full")  }
  - Edit: x.is_represented
    button: |
      **Does ${ x.name.full(middle="full") } have a lawyer?**
      % if x.is_represented is None:
      I don't know
      % else:
      ${ word(yesno(x.is_represented)) }
      % endif
  - Edit: x.lawyer.name.first
    button: |
      **Lawyer name:**
      ${ x.lawyer.name.full(middle="full") }
    show if: x.is_represented
  - Edit: x.address.address
    button: |
      % if x.is_represented == True:
      **${ x.lawyer.name.full(middle="full") }'s address:**
      % else:
      **${ x.name.full(middle="full") }'s address:**
      % endif
      ${ x.address.on_one_line(bare=True) }
  - Edit: x.knows_delivery_method
    button: |
      **Do you know how you will deliver your forms to them?**
      ${ word(yesno(x.knows_delivery_method)) }
  - Edit: x.hand_delivery
    button: |
      **Delivery by: (Edit to view and change details)**
      
      % if x.efm_delivery == True:
        * E-filing system
      % endif
      % if x.email_delivery == True:
        * Email
      % endif
      % if x.hand_delivery == True:
        * Hand
      % endif
      % if x.mail_delivery == True:
        * US mail or delivery company
      % endif
    show if: x.knows_delivery_method
  - Edit: x.delivery_date
    button: |
      **Delivery on:**
      ${ x.delivery_date } at ${ format_time(x.delivery_time, "h:mm a") }
    show if: x.knows_delivery_method
---
id: users review screen
continue button field: users.revisit
question: |
  Edit the ${ user_ask_role }s
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: other parties review screen
continue button field: other_parties.revisit
question: |
  % if user_ask_role == "plaintiff":
    Edit the defendants
  % else:
    Edit the plaintiffs
  % endif
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
section: Case info
id: case info review screen
event: section_case_info
question: |
  Case info
subquestion: |
  Edit your answers below.
review: 
  - Edit: user_ask_role
    button: |
      % if user_ask_role == "plaintiff":
        **Your role:** plaintiff or petitioner
      % else:
        **Your role:** defendant or respondent
      % endif
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where this case is filed:**
      ${ trial_court.address.county }
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
---
section: Parties and delivery
id: delivery info review screen
event: section_parties
question: |
  Parties and delivery
subquestion: |
  Edit your answers below.
review:
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }

---
section: About you
id: about you review screen
event: section_about_you
question: |
  About you
subquestion: |
  Edit your answers below.
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${ users[0].name.full(middle="full") }
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }